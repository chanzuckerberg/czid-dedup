name: CICD

on:
  push:

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install Nightly Toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        components: rustfmt, clippy
        override: true
    - name: Format
      uses: actions-rs/cargo@v1
      with:
        command: fmt
    - name: Fail if Unformatted
      run: git diff --exit-code
    - name: Check
      uses: actions-rs/cargo@v1
      with:
        command: check
    - name: Clippy Check
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features
    - name: Test
      uses: actions-rs/cargo@v1
      with:
        toolchain: nightly
        command: test
      env:
        CARGO_INCREMENTAL: '0'
        RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
        RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
    - name: Generate Coverage
      uses: actions-rs/grcov@v0.1
      if: ${{ !startsWith(github.ref, 'refs/tag') }}
    - name: Upload Coverage
      uses: codecov/codecov-action@v1
      if: ${{ !startsWith(github.ref, 'refs/tag') }}
    - name: Run Benchmark
      run: cargo +nightly bench | tee output.txt
    - name: Upload Benchmark
      uses: rhysd/github-action-benchmark@v1
      with:
        tool: 'cargo'
        output-file-path: output.txt

  release:
    name: Release
    needs: check
    runs-on: ${{ matrix.os }}
    if: ${{ startsWith(github.ref, 'refs/tag') }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Build
      run: cargo build --release --locked
    - name: Upload binaries
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/idseq-dedup${{ matrix.os == 'windows-latest' && '.exe' || '' }}
        asset_name: idseq-dedup-${{ runner.os }}
        tag: ${{ github.ref }}
        overwrite: true

